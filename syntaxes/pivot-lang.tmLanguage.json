{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "pivot-lang",
	"patterns": [
		{
			"include": "#statement"
		}
	],
	"repository": {
		"statement": {
			"patterns": [
				{
					"include": "#keywords"
				},
				{
					"include": "#strings"
				},
				{
					"include": "#number"
				},
				{
					"include": "#object"
				},
				{
					"include": "#declarations"
				}
			]
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.pivot-lang",
					"match": "\\b(if|while|for|return|let|else|break|continue|struct|fn)\\b"
				},
				{
					"name": "keyword.other.pivot-lang",
					"match": "\\b(i8|i16|i32|i64|i128|u8|u16|u32|u64|u128|f32|f64|bool|void)\\b"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.pivot-lang",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.pivot-lang",
					"match": "\\\\."
				}
			]
		},
		"number": {
			"patterns": [
				{
					"comment": "handles hexadecimal numbers",
					"match": "(0x)[0-9a-fA-f]*",
					"name": "constant.hex.numeric.pivot-lang"
				},
				{
					"comment": "handles integer and decimal numbers",
					"match": "[+-.]?(?=[1-9]|0(?!\\d))\\d+(\\.\\d+)?([eE][+-]?\\d+)?",
					"name": "constant.dec.numeric.pivot-lang"
				}
			]
		},
		"operators": {
			"name": "meta.operators.pivot-lang",
			"patterns": [
				{
					"name": "keyword.operator.assignment",
					"match": "(=)"
				},
				{
					"name": "keyword.operator.comparison",
					"match": "(==|===)"
				},
				{
					"name": "keyword.operator.relational",
					"match": "(<|>|<=|>=)"
				},
				{
					"name": "keyword.operator.arithmetic",
					"match": "[+-*/]"
				}
			]
		},
		"array": {
			"begin": "\\[",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.array.begin.pivot-lang"
				}
			},
			"end": "\\]",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.array.end.pivot-lang"
				}
			},
			"name": "meta.structure.array.pivot-lang",
			"patterns": [
				{
					"include": "#comments"
				},
				{
					"include": "#value"
				},
				{
					"match": ",",
					"name": "punctuation.separator.array.pivot-lang"
				},
				{
					"match": "[^\\s\\]]",
					"name": "invalid.illegal.expected-array-separator.pivot-lang"
				}
			]
		},
		"key": {
			"patterns": [
				{
					"include": "#strings"
				},
				{
					"match": "[a-zA-Z0-9\\$_-]+\\s?(?=:)",
					"name": "meta.object-literal.key.pivot-lang"
				}
			]
		},
		"value": {
			"patterns": [
				{
					"include": "#constant"
				},
				{
					"include": "#number"
				},
				{
					"include": "#strings"
				},
				{
					"include": "#array"
				},
				{
					"include": "#object"
				}
			]
		},
		"object": {
			"begin": "\\{",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.dictionary.begin.pivot-lang"
				}
			},
			"comment": "a pivot-lang object",
			"end": "\\}",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.dictionary.end.pivot-lang"
				}
			},
			"name": "meta.structure.dictionary.pivot-lang",
			"patterns": [
				{
					"include": "#comments"
				},
				{
					"comment": "the pivot-lang object key",
					"include": "#key"
				},
				{
					"begin": ":",
					"beginCaptures": {
						"0": {
							"name": "punctuation.separator.dictionary.key-value.pivot-lang"
						}
					},
					"end": "(,)|(?=\\})",
					"endCaptures": {
						"1": {
							"name": "punctuation.separator.dictionary.pair.pivot-lang"
						}
					},
					"name": "meta.structure.dictionary.value.pivot-lang",
					"patterns": [
						{
							"comment": "the pivot-lang object value",
							"include": "#value"
						},
						{
							"include": "#keywords"
						},
						{
							"match": "[^\\s,]",
							"name": "invalid.illegal.expected-dictionary-separator.pivot-lang"
						}
					]
				},
				{
					"match": "[^\\s\\}]",
					"name": "invalid.illegal.expected-dictionary-separator.pivot-lang"
				}
			]
		},
		"declarations": {
			"patterns": [
				{
					"include": "#struct-declaration"
				},
				{
					"include": "#function-declaration"
				}
			]
		},
		"struct-declaration": {
			"name": "meta.struct.pivot-lang",
			"begin": "(?<=struct\\s*)(?:(\\b[_\\$a-zA-Z][\\w\\d_]*\\b\\s*))",
			"beginCaptures": {
				"1": {
					"name": "entity.name.type.struct.pivot-lang"
				}
			},
			"end": "(?<=\\})",
			"patterns": [
				{
					"begin": "\\{",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.dictionary.begin.pivot-lang"
						}
					},
					"comment": "a pivot-lang interface-object, with space to change line",
					"end": "\\}",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.dictionary.end.pivot-lang"
						}
					},
					"name": "meta.structure.dictionary.pivot-lang",
					"patterns": [
						{
							"include": "#comments"
						},
						{
							"comment": "the pivot-lang object key",
							"include": "#key"
						},
						{
							"begin": ":",
							"beginCaptures": {
								"0": {
									"name": "punctuation.separator.dictionary.key-value.pivot-lang"
								}
							},
							"end": "([\\n\\r])|(?=\\})",
							"endCaptures": {
								"1": {
									"name": "punctuation.separator.dictionary.pair.pivot-lang"
								}
							},
							"name": "meta.structure.dictionary.value.pivot-lang",
							"patterns": [
								{
									"comment": "the pivot-lang object value",
									"include": "#value"
								},
								{
									"include": "#keywords"
								},
								{
									"match": "[^\\s,]",
									"name": "invalid.illegal.expected-dictionary-separator.pivot-lang"
								}
							]
						},
						{
							"match": "[^\\s\\}]",
							"name": "invalid.illegal.expected-dictionary-separator.pivot-lang"
						}
					]
				}
			]
		},
		"function-declaration": {
			"begin": "(?<=fn\\s*)(?:(\\b[_\\$a-zA-Z][\\w\\d_]*\\b\\s*))",
			"beginCaptures": {
				"1": {
					"name": "variable.other.writable.fn.pivot-lang"
				}
			},
			"end": "(?<=\\})",
			"patterns": [
				{
					"begin": "\\(",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.parameter.begin.pivot-lang"
						}
					},
					"comment": "function arguments rules",
					"end": "\\)",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.parameter.end.pivot-lang"
						}
					},
					"name": "meta.structure.dictionary.pivot-lang",
					"patterns": [
						{
							"comment": "the pivot-lang object key",
							"include": "#key"
						},
						{
							"begin": ":",
							"beginCaptures": {
								"0": {
									"name": "punctuation.separator.dictionary.key-value.pivot-lang"
								}
							},
							"end": "(,)|(?=\\))",
							"endCaptures": {
								"1": {
									"name": "punctuation.separator.dictionary.pair.pivot-lang"
								}
							},
							"name": "meta.structure.dictionary.value.pivot-lang",
							"patterns": [
								{
									"comment": "function parameter type",
									"include": "#value"
								},
								{
									"name": "entity.name.type.parameter.pivot-lang",
									"match": "\\b[a-zA-Z0-9_]+\\b"
								},
								{
									"include": "#keywords"
								}
							]
						},
						{
							"match": "[^\\s\\)]",
							"name": "invalid.illegal.expected-dictionary-separator.pivot-lang"
						}
					]
				},
				{
					"comment": "function return type",
					"name": "entity.name.type.parameter.pivot-lang",
					"match": "\\b[a-zA-Z0-9_]+\\b"
				},
				{
					"begin": "(\\{)",
					"end": "(\\})",
					"patterns": [
						{
							"include": "statement"
						}
					]
				}
			]
		}
	},
	"scopeName": "source.pivot-lang"
}